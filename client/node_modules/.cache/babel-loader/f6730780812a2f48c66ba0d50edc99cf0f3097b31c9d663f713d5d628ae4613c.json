{"ast":null,"code":"var _jsxFileName = \"/home/lebowski/Development/code/phase-5/project-community-connex/client/src/components/StoreLoginForm.js\",\n  _s = $RefreshSig$();\n// LoginForm.js\nimport { useHistory } from \"react-router-dom\";\nimport React, { useState } from 'react';\nimport { Formik, Field, Form, ErrorMessage } from 'formik';\nimport * as Yup from 'yup';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StoreLoginForm = ({\n  setStoreLoggedIn,\n  getStores,\n  setLoggedInStoreId\n}) => {\n  _s();\n  const loggedInStoreId = sessionStorage.getItem('store_id');\n  const history = useHistory();\n  const [message, setMessage] = useState('');\n  const initialValues = {\n    email: '',\n    password: ''\n  };\n  const validationSchema = Yup.object().shape({\n    email: Yup.string().email('Invalid email address').required('Required'),\n    password: Yup.string().required('Required')\n  });\n  const handleSubmit = async (values, {\n    setSubmitting\n  }) => {\n    try {\n      setMessage('Logging in...');\n      // Send login request to your backend\n      const response = await fetch('/store_login', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(values)\n      });\n      if (response.ok) {\n        // const store = \n        const store = await response.json();\n        // getStores(store);\n        setMessage('Login successful. Redirecting to Home...');\n        setTimeout(() => {\n          setStoreLoggedIn(true);\n          history.push(`/stores/${loggedInStoreId}`); // After 4 seconds, navigate to the home page\n        }, 2000);\n      } else {\n        const error = await response.json();\n        console.error('Login failed:', error);\n        setStoreLoggedIn(false);\n      }\n    } catch (error) {\n      console.error('Error during login:', error);\n    }\n    setSubmitting(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: message ? /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"login-message\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: \" Store Login: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Formik, {\n        initialValues: initialValues,\n        validationSchema: validationSchema,\n        onSubmit: handleSubmit,\n        children: /*#__PURE__*/_jsxDEV(Form, {\n          children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"email\",\n              children: \"Email:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Field, {\n              type: \"email\",\n              id: \"email\",\n              name: \"email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n              name: \"email\",\n              component: \"div\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"password\",\n              children: \"Password:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Field, {\n              type: \"password\",\n              id: \"storepassword\",\n              name: \"password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n              name: \"password\",\n              component: \"div\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              children: \"Login\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n};\n_s(StoreLoginForm, \"e8uWabS7TpNhb5XlY3cF4a1jI6M=\", false, function () {\n  return [useHistory];\n});\n_c = StoreLoginForm;\nexport default StoreLoginForm;\n\n// import React, { useEffect, useState } from \"react\";\n// import { useHistory } from \"react-router-dom\";\n\n// function LoginForm({setLoggedInID, setLoggedIn, loggedIn}) {\n\n//     const [email, setEmail] = useState('')\n//     const [password, setPassword] = useState('')\n//     const [validLogin, setValidLogin] = useState(false)\n//     const history = useHistory()\n\n//     const handleLogin = async () => {\n//         try{\n//             const response = await fetch('/clients') // Fetch customer data\n//             const clientData = await response.json()\n//             const client = clientData.find((client) => client.email === email);\n\n//             if (client && client.password === password) {\n//                 // Valid login\n//                 console.log('Login successful')\n//                 console.log(client.id)\n//                 setLoggedIn(!loggedIn)\n//                 setLoggedInID(client.id)\n//                 history.push('/Home')\n//             } else {\n//                 // Invalid login\n//                 setValidLogin('Invalid username or password');\n//             }\n\n//         } catch (error) {\n//             console.error('Error fetching customer data', error);\n//         };\n//     };\n\n//     return (\n//         <div className=\"loginform\">\n//             <div className=\"centered-content\">\n//                 <h1 className=\"login\">Login</h1>\n//                 <br />\n//                 <div id=\"logform\">\n//                     Email: <input\n//                         className=\"loginput\"\n//                         type=\"text\"\n//                         placeholder=\"Email\"\n//                         value={email}\n//                         onChange={(e) => setEmail(e.target.value)}\n//                     />\n//                     <br/>\n//                     Password: <input\n//                         className=\"loginput\"\n//                         type=\"password\"\n//                         placeholder=\"Password\"\n//                         value={password}\n//                         onChange={(e) => setPassword(e.target.value)}\n//                     />\n//                     <br />\n//                     <button className=\"loginbutton\" onClick={handleLogin}>Login</button>\n//                     {validLogin && <p>{validLogin}</p>}\n//                 </div>\n//             </div>\n//         </div>\n//     )\n// }\n\n// export default LoginForm\nvar _c;\n$RefreshReg$(_c, \"StoreLoginForm\");","map":{"version":3,"names":["useHistory","React","useState","Formik","Field","Form","ErrorMessage","Yup","jsxDEV","_jsxDEV","StoreLoginForm","setStoreLoggedIn","getStores","setLoggedInStoreId","_s","loggedInStoreId","sessionStorage","getItem","history","message","setMessage","initialValues","email","password","validationSchema","object","shape","string","required","handleSubmit","values","setSubmitting","response","fetch","method","headers","body","JSON","stringify","ok","store","json","setTimeout","push","error","console","children","id","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","type","name","component","_c","$RefreshReg$"],"sources":["/home/lebowski/Development/code/phase-5/project-community-connex/client/src/components/StoreLoginForm.js"],"sourcesContent":["// LoginForm.js\nimport { useHistory } from \"react-router-dom\";\nimport React, { useState } from 'react';\nimport { Formik, Field, Form, ErrorMessage } from 'formik';\nimport * as Yup from 'yup';\n\nconst StoreLoginForm = ({ setStoreLoggedIn, getStores, setLoggedInStoreId }) => {\n  const loggedInStoreId = sessionStorage.getItem('store_id');\n\n\n  const history = useHistory()\n  const [message, setMessage] = useState('');\n\n\n  const initialValues = {\n    email: '',\n    password: '', \n  };\n\n  const validationSchema = Yup.object().shape({\n    email: Yup.string().email('Invalid email address').required('Required'),\n    password: Yup.string().required('Required'),\n  });\n\n  const handleSubmit = async (values, { setSubmitting }) => {\n    try {\n      setMessage('Logging in...');\n      // Send login request to your backend\n      const response = await fetch('/store_login', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(values),\n      });\n\n      if (response.ok) {\n        // const store = \n        const store = await response.json();\n        // getStores(store);\n        setMessage('Login successful. Redirecting to Home...');\n        \n        setTimeout(() => {\n          setStoreLoggedIn(true)\n          history.push(`/stores/${loggedInStoreId}`);// After 4 seconds, navigate to the home page\n        }, 2000);\n      } else {\n        const error = await response.json();\n        console.error('Login failed:', error);\n        setStoreLoggedIn(false);\n      }\n    } catch (error) {\n      console.error('Error during login:', error);\n    }\n\n    setSubmitting(false);\n  };\n\n  return (\n    <div>\n      {message ? (\n        <div id=\"login-message\">\n          <div>{message}</div>\n        </div>\n      ) : (\n        <div>\n            <div> Store Login: </div>\n          \n          <Formik\n            initialValues={initialValues}\n            validationSchema={validationSchema}\n            onSubmit={handleSubmit}\n          >\n            <Form>\n            <br/>\n              <div>\n                <label htmlFor=\"email\">Email:</label>\n                <Field type=\"email\" id=\"email\" name=\"email\" />\n                <ErrorMessage name=\"email\" component=\"div\" />\n              </div>\n              <br/>\n              <div>\n                <label htmlFor=\"password\">Password:</label>\n                <Field type=\"password\" id=\"storepassword\" name=\"password\" />\n                <ErrorMessage name=\"password\" component=\"div\" />\n              </div>\n              <br/>\n              <div>\n                <button type=\"submit\">Login</button>\n              </div>\n            </Form>\n          </Formik>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default StoreLoginForm;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// import React, { useEffect, useState } from \"react\";\n// import { useHistory } from \"react-router-dom\";\n\n\n// function LoginForm({setLoggedInID, setLoggedIn, loggedIn}) {\n\n//     const [email, setEmail] = useState('')\n//     const [password, setPassword] = useState('')\n//     const [validLogin, setValidLogin] = useState(false)\n//     const history = useHistory()\n\n    \n//     const handleLogin = async () => {\n//         try{\n//             const response = await fetch('/clients') // Fetch customer data\n//             const clientData = await response.json()\n//             const client = clientData.find((client) => client.email === email);\n            \n            \n//             if (client && client.password === password) {\n//                 // Valid login\n//                 console.log('Login successful')\n//                 console.log(client.id)\n//                 setLoggedIn(!loggedIn)\n//                 setLoggedInID(client.id)\n//                 history.push('/Home')\n//             } else {\n//                 // Invalid login\n//                 setValidLogin('Invalid username or password');\n//             }\n            \n//         } catch (error) {\n//             console.error('Error fetching customer data', error);\n//         };\n//     };\n\n\n//     return (\n//         <div className=\"loginform\">\n//             <div className=\"centered-content\">\n//                 <h1 className=\"login\">Login</h1>\n//                 <br />\n//                 <div id=\"logform\">\n//                     Email: <input\n//                         className=\"loginput\"\n//                         type=\"text\"\n//                         placeholder=\"Email\"\n//                         value={email}\n//                         onChange={(e) => setEmail(e.target.value)}\n//                     />\n//                     <br/>\n//                     Password: <input\n//                         className=\"loginput\"\n//                         type=\"password\"\n//                         placeholder=\"Password\"\n//                         value={password}\n//                         onChange={(e) => setPassword(e.target.value)}\n//                     />\n//                     <br />\n//                     <button className=\"loginbutton\" onClick={handleLogin}>Login</button>\n//                     {validLogin && <p>{validLogin}</p>}\n//                 </div>\n//             </div>\n//         </div>\n//     )\n// }\n\n\n// export default LoginForm"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}