{"ast":null,"code":"var _jsxFileName = \"/home/lebowski/Development/code/phase-5/project-community-connex/client/src/components/TransactionsByStore.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TransactionsByStore = () => {\n  _s();\n  const [shop, setShop] = useState(null);\n  const [trans, setTrans] = useState(null);\n  const [filteredTransactions, setFilteredTransactions] = useState([]);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    fetch(\"/check_store_session\").then(resp => {\n      if (resp.ok) {\n        resp.json().then(store => setShop(store));\n      }\n    });\n  }, []);\n  useEffect(() => {\n    fetch('/transactions').then(resp => resp.json()).then(data => setTrans(data)).finally(() => setLoading(false));\n  }, []);\n  useEffect(() => {\n    if (!shop || !trans || loading) {\n      return;\n    }\n    const shopGoodsServiceNames = shop.goods_services.map(service => service.name);\n    const filtered = trans.filter(transaction => {\n      var _transaction$goods_se;\n      const transactionGoodsServiceNames = ((_transaction$goods_se = transaction.goods_service_names) === null || _transaction$goods_se === void 0 ? void 0 : _transaction$goods_se.split(', ')) || [];\n      return transactionGoodsServiceNames.some(name => shopGoodsServiceNames.includes(name));\n    });\n    setFilteredTransactions(filtered);\n  }, [shop, trans, loading]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    align: \"center\",\n    className: \"storess\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Filtered Transactions for \", shop ? shop.name : \"\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: filteredTransactions.map(tran => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Client: \", tran.client.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Email: \", tran.client.email]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Total Amount: \", tran.total_amount]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 13\n        }, this)]\n      }, tran.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n_s(TransactionsByStore, \"ahz1k5Bo9fjf+TEsncl5JfUCfKk=\");\n_c = TransactionsByStore;\nexport default TransactionsByStore;\n\n//   useEffect(() => {\n//     // Check if shop is null or undefined\n//     if (!shop || loading) {\n//       return; \n//     }\n\n//     const trans = shop.transactions || [];\n\n//     const allTransactions = clients?.reduce((acc, client) => acc.concat(client.transactions), []);\n//     console.log(allTransactions)\n\n//     // Now you can filter the transactions based on your criteria\n//     const filtered = allTransactions?.filter(transaction => {\n//         const name = transaction?.goods_service_names.split(', ') || []\n//       return transaction.goods_service_names.split(', ') === shop.name;\n//     });\n//     console.log(filtered);\n\n//     setFilteredTransactions(filtered);\n//   }, [shop, clients]);\n\n//   console.log(filteredTransactions)\n\n//   return (\n//     <div align='center' className='storess'>\n//       <h2>Transactions for {shop ? shop.name : \"\"}</h2>\n//       <ul>\n//         {trans.map((tran) => (\n//           <p key={tran.id}>\n//             <p>Client: {tran.client.name}</p>\n//             <p>Email: {tran.client.email}</p>\n//             <p>Total Amount: {tran.total_amount}</p>\n//           </p>\n//         ))}\n//       </ul>\n//     </div>\n//   );\n// };\n\n// export default TransactionsByStore;\n\n//   const [shop, setShop] = useState(null);\n//   const [carts, setCarts] = useState(null);\n\n//   useEffect(() => {\n//     const fetchData = async () => {\n//       try {\n//         const response = await fetch(\"/check_store_session\");\n//         if (response.ok) {\n//           const store = await response.json();\n//           setShop(store);\n\n//           // Assuming there is a carts endpoint, fetch cart data here\n//           const cartsResponse = await fetch(\"/carts\");\n//           if (cartsResponse.ok) {\n//             const cartData = await cartsResponse.json();\n//             setCarts(cartData.carts);\n//           }\n//         }\n//       } catch (error) {\n//         console.error('Error fetching store data:', error);\n//       }\n//     };\n\n//     fetchData();\n//   }, []);\n\n//   // Check if shop or carts is null or undefined\n//   if (!shop || !carts) {\n//     return <p>Loading...</p>; // You might want to display a loading indicator\n//   }\n\n//   // Check if transactions is null or undefined\n//   const transactions = shop.transactions || [];\n//   console.log(shop.goods_services);\n\n//   // Map over goods_services and filter the cart by goods_service_id\n//   const goodsServicesWithCart = shop.goods_services.map((goodsService) => {\n//     const cartForGoodsService = carts.find((cart) => cart.goods_service_id === goodsService.id);\n//     return {\n//       ...goodsService,\n//       cart: cartForGoodsService || null,\n//     };\n//   });\n\n//   return (\n//     <div align='center' className='storess'>\n//       <h2>Transactions for {shop ? shop.name : \"\"}</h2>\n//       {transactions.map((transaction) => (\n//         <div key={transaction.id}>\n//           <div><b>Client:</b> {transaction.client.name}</div>\n//           <div><b>Email:</b> {transaction.client.email}</div>\n//           <div><b>Total Amount:</b> ${transaction.total_amount.toFixed(2)}</div>\n//           {/* Add more details as needed */}\n//           <br />\n//           {/* Format date similar to ClientTransactions component */}\n//           <div><b>Date/Time:</b> {new Date(transaction.timestamp).toLocaleString('en-US', {\n//             year: 'numeric',\n//             month: 'numeric',\n//             day: 'numeric',\n//             hour: 'numeric',\n//             minute: 'numeric',\n//             hour12: true,\n//             timeZone: 'America/New_York',\n//           })}</div>\n//           <div>-----------------------------------------------------------------</div>\n//           <div>-------------------------------------------------------------------------</div>\n//           <br />\n//           <br />\n//         </div>\n//       ))}\n\n//       {goodsServicesWithCart.map((goodsService) => (\n//         <div key={goodsService.id}>\n//           <h3>{goodsService.name}</h3>\n//           <p>Price: ${goodsService.price.toFixed(2)}</p>\n//           {goodsService.cart && (\n//             <p>Cart Information: {/* Render cart details from goodsService.cart */}</p>\n//           )}\n//           <hr />\n//         </div>\n//       ))}\n//     </div>\n//   );\n// };\nvar _c;\n$RefreshReg$(_c, \"TransactionsByStore\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","TransactionsByStore","_s","shop","setShop","trans","setTrans","filteredTransactions","setFilteredTransactions","loading","setLoading","fetch","then","resp","ok","json","store","data","finally","shopGoodsServiceNames","goods_services","map","service","name","filtered","filter","transaction","_transaction$goods_se","transactionGoodsServiceNames","goods_service_names","split","some","includes","align","className","children","fileName","_jsxFileName","lineNumber","columnNumber","tran","client","email","total_amount","id","_c","$RefreshReg$"],"sources":["/home/lebowski/Development/code/phase-5/project-community-connex/client/src/components/TransactionsByStore.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nconst TransactionsByStore = () => {\n  const [shop, setShop] = useState(null);\n  const [trans, setTrans] = useState(null);\n  const [filteredTransactions, setFilteredTransactions] = useState([]);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    fetch(\"/check_store_session\")\n      .then((resp) => {\n        if (resp.ok) {\n          resp.json().then((store) => setShop(store));\n        }\n      });\n  }, []);\n\n  useEffect(() => {\n    fetch('/transactions')\n      .then((resp) => resp.json())\n      .then((data) => setTrans(data))\n      .finally(() => setLoading(false));\n  }, []);\n\n  useEffect(() => {\n    if (!shop || !trans || loading) {\n      return;\n    }\n\n    const shopGoodsServiceNames = shop.goods_services.map((service) => service.name);\n\n    const filtered = trans.filter((transaction) => {\n      const transactionGoodsServiceNames = transaction.goods_service_names?.split(', ') || [];\n      return transactionGoodsServiceNames.some((name) => shopGoodsServiceNames.includes(name));\n    });\n\n    setFilteredTransactions(filtered);\n  }, [shop, trans, loading]);\n\n  return (\n    <div align='center' className='storess'>\n      <h2>Filtered Transactions for {shop ? shop.name : \"\"}</h2>\n      <ul>\n        {filteredTransactions.map((tran) => (\n          <div key={tran.id}>\n            <p>Client: {tran.client.name}</p>\n            <p>Email: {tran.client.email}</p>\n            <p>Total Amount: {tran.total_amount}</p>\n          </div>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default TransactionsByStore;\n\n\n  \n//   useEffect(() => {\n//     // Check if shop is null or undefined\n//     if (!shop || loading) {\n//       return; \n//     }\n\n//     const trans = shop.transactions || [];\n\n//     const allTransactions = clients?.reduce((acc, client) => acc.concat(client.transactions), []);\n//     console.log(allTransactions)\n\n//     // Now you can filter the transactions based on your criteria\n//     const filtered = allTransactions?.filter(transaction => {\n//         const name = transaction?.goods_service_names.split(', ') || []\n//       return transaction.goods_service_names.split(', ') === shop.name;\n//     });\n//     console.log(filtered);\n\n//     setFilteredTransactions(filtered);\n//   }, [shop, clients]);\n\n//   console.log(filteredTransactions)\n\n//   return (\n//     <div align='center' className='storess'>\n//       <h2>Transactions for {shop ? shop.name : \"\"}</h2>\n//       <ul>\n//         {trans.map((tran) => (\n//           <p key={tran.id}>\n//             <p>Client: {tran.client.name}</p>\n//             <p>Email: {tran.client.email}</p>\n//             <p>Total Amount: {tran.total_amount}</p>\n//           </p>\n//         ))}\n//       </ul>\n//     </div>\n//   );\n// };\n\n// export default TransactionsByStore;\n\n//   const [shop, setShop] = useState(null);\n//   const [carts, setCarts] = useState(null);\n\n//   useEffect(() => {\n//     const fetchData = async () => {\n//       try {\n//         const response = await fetch(\"/check_store_session\");\n//         if (response.ok) {\n//           const store = await response.json();\n//           setShop(store);\n\n//           // Assuming there is a carts endpoint, fetch cart data here\n//           const cartsResponse = await fetch(\"/carts\");\n//           if (cartsResponse.ok) {\n//             const cartData = await cartsResponse.json();\n//             setCarts(cartData.carts);\n//           }\n//         }\n//       } catch (error) {\n//         console.error('Error fetching store data:', error);\n//       }\n//     };\n\n//     fetchData();\n//   }, []);\n\n//   // Check if shop or carts is null or undefined\n//   if (!shop || !carts) {\n//     return <p>Loading...</p>; // You might want to display a loading indicator\n//   }\n\n//   // Check if transactions is null or undefined\n//   const transactions = shop.transactions || [];\n//   console.log(shop.goods_services);\n\n//   // Map over goods_services and filter the cart by goods_service_id\n//   const goodsServicesWithCart = shop.goods_services.map((goodsService) => {\n//     const cartForGoodsService = carts.find((cart) => cart.goods_service_id === goodsService.id);\n//     return {\n//       ...goodsService,\n//       cart: cartForGoodsService || null,\n//     };\n//   });\n\n//   return (\n//     <div align='center' className='storess'>\n//       <h2>Transactions for {shop ? shop.name : \"\"}</h2>\n//       {transactions.map((transaction) => (\n//         <div key={transaction.id}>\n//           <div><b>Client:</b> {transaction.client.name}</div>\n//           <div><b>Email:</b> {transaction.client.email}</div>\n//           <div><b>Total Amount:</b> ${transaction.total_amount.toFixed(2)}</div>\n//           {/* Add more details as needed */}\n//           <br />\n//           {/* Format date similar to ClientTransactions component */}\n//           <div><b>Date/Time:</b> {new Date(transaction.timestamp).toLocaleString('en-US', {\n//             year: 'numeric',\n//             month: 'numeric',\n//             day: 'numeric',\n//             hour: 'numeric',\n//             minute: 'numeric',\n//             hour12: true,\n//             timeZone: 'America/New_York',\n//           })}</div>\n//           <div>-----------------------------------------------------------------</div>\n//           <div>-------------------------------------------------------------------------</div>\n//           <br />\n//           <br />\n//         </div>\n//       ))}\n\n//       {goodsServicesWithCart.map((goodsService) => (\n//         <div key={goodsService.id}>\n//           <h3>{goodsService.name}</h3>\n//           <p>Price: ${goodsService.price.toFixed(2)}</p>\n//           {goodsService.cart && (\n//             <p>Cart Information: {/* Render cart details from goodsService.cart */}</p>\n//           )}\n//           <hr />\n//         </div>\n//       ))}\n//     </div>\n//   );\n// };"],"mappings":"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},"metadata":{},"sourceType":"module","externalDependencies":[]}