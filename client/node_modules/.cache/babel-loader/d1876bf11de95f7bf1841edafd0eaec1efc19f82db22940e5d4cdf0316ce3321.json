{"ast":null,"code":"var _jsxFileName = \"/home/lebowski/Development/code/phase-5/project-community-connex/client/src/components/App.js\",\n  _s = $RefreshSig$();\nimport { Route, Switch } from 'react-router-dom';\nimport React, { useState, useEffect } from \"react\";\nimport About from \"./About\";\nimport Clients from './Clients';\nimport Home from './Home';\nimport Navbar from './Navbar';\nimport Login from './Login';\nimport StoreAcctPage from './StoreAcctPage';\nimport Stores from './Stores';\nimport StoreProfile from './StoreProfile';\nimport TransactionsByStore from \"./TransactionsByStore\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n  const [clients, setClients] = useState([]);\n  const [stores, setStores] = useState([]);\n  const [storeLoggedIn, setStoreLoggedIn] = useState(false);\n  const [clientLoggedIn, setClientLoggedIn] = useState(false);\n  const [loggedInStoreId, setLoggedInStoreId] = useState(null);\n\n  //this fetch is for clients card\n  useEffect(() => {\n    fetch('/clients').then(resp => resp.json()).then(data => setClients(data));\n  }, []);\n  useEffect(() => {\n    fetch('/stores').then(resp => resp.json()).then(data => setStores(data));\n  }, []);\n\n  // const loggedInStoreId = sessionStorage.getItem('store_id');\n\n  const [transactions, setTransactions] = useState([]);\n  const [shop, setShop] = useState(null);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const matchedStore = stores.find(store => store.id === loggedInStoreId);\n        if (!matchedStore) {\n          // Handle the case where the store is not found\n          console.error('Store not found for the logged-in ID:', loggedInStoreId);\n          return;\n        }\n        const response = await fetch(`/transactions/${loggedInStoreId}`);\n        const data = await response.json();\n\n        // Return data and set them to states\n        setShop(matchedStore);\n        setTransactions(data.transactions);\n      } catch (error) {\n        console.error('Error fetching data:', error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchData();\n  }, [stores, loggedInStoreId]);\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 14\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      align: \"center\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"COMMUNITY CONNEX!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"bannerdiv\",\n      children: /*#__PURE__*/_jsxDEV(Navbar, {\n        loggedInStoreId: loggedInStoreId,\n        clientLoggedIn: clientLoggedIn,\n        stores: stores,\n        storeLoggedIn: storeLoggedIn\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"maindiv\",\n      children: /*#__PURE__*/_jsxDEV(Switch, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/Login\",\n          children: /*#__PURE__*/_jsxDEV(Login, {\n            setLoggedInStoreId: setLoggedInStoreId,\n            setClientLoggedIn: setClientLoggedIn,\n            setStoreLoggedIn: setStoreLoggedIn\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 44\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/\",\n          children: /*#__PURE__*/_jsxDEV(Home, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 39\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/clients\",\n          children: /*#__PURE__*/_jsxDEV(Clients, {\n            clients: clients\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 46\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/stores\",\n          children: /*#__PURE__*/_jsxDEV(Stores, {\n            stores: stores\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 45\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: `/stores/${loggedInStoreId}`,\n          children: /*#__PURE__*/_jsxDEV(StoreProfile, {\n            stores: stores\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 66\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: `/stores/${loggedInStoreId}/transactions`,\n          children: /*#__PURE__*/_jsxDEV(TransactionsByStore, {\n            stores: stores,\n            loggedInStoreId: loggedInStoreId\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 79\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: `/stores/${loggedInStoreId}/AccountManager`,\n          children: /*#__PURE__*/_jsxDEV(StoreAcctPage, {\n            loggedInStoreId: loggedInStoreId,\n            stores: stores\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 81\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/About\",\n          children: /*#__PURE__*/_jsxDEV(About, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 44\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n_s(App, \"VbxbrPHOnh9U2vjCoY28wZ27sXw=\");\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Route","Switch","React","useState","useEffect","About","Clients","Home","Navbar","Login","StoreAcctPage","Stores","StoreProfile","TransactionsByStore","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","clients","setClients","stores","setStores","storeLoggedIn","setStoreLoggedIn","clientLoggedIn","setClientLoggedIn","loggedInStoreId","setLoggedInStoreId","fetch","then","resp","json","data","transactions","setTransactions","shop","setShop","loading","setLoading","fetchData","matchedStore","find","store","id","console","error","response","children","fileName","_jsxFileName","lineNumber","columnNumber","align","exact","path","_c","$RefreshReg$"],"sources":["/home/lebowski/Development/code/phase-5/project-community-connex/client/src/components/App.js"],"sourcesContent":["import { Route, Switch } from 'react-router-dom';\nimport React, { useState, useEffect } from \"react\";\nimport About from \"./About\";\nimport Clients from './Clients';\nimport Home from './Home';\nimport Navbar from './Navbar';\nimport Login from './Login';\nimport StoreAcctPage from './StoreAcctPage';\nimport Stores from './Stores';\nimport StoreProfile from './StoreProfile';\nimport TransactionsByStore from \"./TransactionsByStore\"\n\n\n\nexport default function App() {\n\n    const [clients, setClients] = useState([])\n    const [stores, setStores] = useState([])\n    const [storeLoggedIn, setStoreLoggedIn] = useState(false)\n    const [clientLoggedIn, setClientLoggedIn] = useState(false)\n    const [loggedInStoreId, setLoggedInStoreId] = useState(null);\n    \n    //this fetch is for clients card\n    useEffect(() => {\n        fetch('/clients')\n        .then((resp) => resp.json())\n        .then((data) => setClients(data))\n    }, [])\n    \n\n\n    useEffect(() => {\n        fetch('/stores')\n            .then((resp) => resp.json())\n            .then((data) => setStores(data))\n    }, [])\n\n    // const loggedInStoreId = sessionStorage.getItem('store_id');\n\n    const [transactions, setTransactions] = useState([]);\n    const [shop, setShop] = useState(null);\n    const [loading, setLoading] = useState(true);\n  \n    useEffect(() => {\n      const fetchData = async () => {\n        try {\n          const matchedStore = stores.find(store => store.id === loggedInStoreId);\n          \n  \n          if (!matchedStore) {\n            // Handle the case where the store is not found\n            console.error('Store not found for the logged-in ID:', loggedInStoreId);\n            return;\n          }\n  \n          const response = await fetch(`/transactions/${loggedInStoreId}`);\n          const data = await response.json();\n  \n          // Return data and set them to states\n          setShop(matchedStore);\n          setTransactions(data.transactions);\n        } catch (error) {\n          console.error('Error fetching data:', error);\n        } finally {\n          setLoading(false);\n        }\n      };\n      fetchData();\n    }, [stores,loggedInStoreId]);\n  \n    if (loading) {\n      return <p>Loading...</p>;\n    }\n\n\n\n    return (\n        <>\n        <header align='center'>\n            <h1>COMMUNITY CONNEX!</h1>\n        </header>\n        <div id='bannerdiv'>\n            <Navbar loggedInStoreId={loggedInStoreId} clientLoggedIn={clientLoggedIn} stores={stores} storeLoggedIn={storeLoggedIn} />\n            \n        </div>\n        <div id='maindiv'>\n            <Switch>\n                <Route exact path=\"/Login\"><Login setLoggedInStoreId={setLoggedInStoreId} setClientLoggedIn={setClientLoggedIn} setStoreLoggedIn={setStoreLoggedIn} /></Route>\n                <Route exact path='/'><Home /></Route>\n                <Route exact path='/clients'><Clients clients={clients} /></Route>\n                <Route exact path='/stores'><Stores stores={stores} /></Route>\n                <Route exact path={`/stores/${loggedInStoreId}`}><StoreProfile stores={stores} /></Route>\n                <Route exact path={`/stores/${loggedInStoreId}/transactions`}><TransactionsByStore stores={stores} loggedInStoreId={loggedInStoreId} /></Route>\n                <Route exact path={`/stores/${loggedInStoreId}/AccountManager`}><StoreAcctPage loggedInStoreId={loggedInStoreId} stores={stores} /></Route>\n                <Route exact path=\"/About\"><About /></Route>\n                {/* <Route exact path={`/stores/AccountManager`} component={<StoreAcctPage stores={stores} />} /> */}\n                {/* <Route exact path='/stores' render={(props) => <Stores {...props} stores={stores} />}></Route> */}\n            </Switch>\n        </div>\n    </>\n    )\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}