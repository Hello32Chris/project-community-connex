{"ast":null,"code":"var _jsxFileName = \"/home/lebowski/Development/code/phase-5/project-community-connex/client/src/components/StoreAcctPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { Formik, Field, Form, ErrorMessage } from 'formik';\nimport * as Yup from 'yup';\nimport StoreCard from \"./StoreCard\";\nimport TransactionsByStore from \"./TransactionsByStore\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function StoreAcctPage({\n  stores,\n  loggedInStoreId\n}) {\n  _s();\n  // const loggedInStoreId = sessionStorage.getItem('store_id');\n  const [store, setStore] = useState(null);\n  const [loading, setLoading] = useState(true);\n  console.log(loggedInStoreId ? loggedInStoreId : 'none');\n  useEffect(() => {\n    const fetchStoreData = async () => {\n      try {\n        if (loggedInStoreId) {\n          // Filter the stores array based on the logged-in store ID\n          const filteredStores = stores.filter(store => store.id === parseInt(loggedInStoreId));\n\n          // Check if the filteredStores array has any items\n          if (filteredStores.length > 0) {\n            // Assuming there's only one store with the given ID, set it as the store\n            setStore(filteredStores[0]);\n          } else {\n            console.warn('Store not found with the provided ID.');\n          }\n        } else {\n          console.warn('No store ID available.');\n        }\n      } catch (error) {\n        console.error('Error fetching store data:', error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchStoreData();\n  }, [loggedInStoreId, stores]);\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 12\n    }, this);\n  }\n  if (!store) {\n    // Handle the case where store data is not available\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Store data not found.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 12\n    }, this);\n  }\n\n  //--------------------------------------------------------------------------------------------\n  const initialValues = {\n    name: store.name,\n    email: store.email,\n    code: store.code\n  };\n  const validationSchema = Yup.object().shape({\n    name: Yup.string().required('Required'),\n    email: Yup.string().email('Invalid email address').required('Required'),\n    code: Yup.string().required('Required')\n    // Add more validations as needed\n  });\n\n  const handleSubmit = (values, {\n    setSubmitting\n  }) => {\n    // Handle the submission logic here\n    console.log('Form values:', values);\n    setSubmitting(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Welcome to the Store Dashboard, \", store.name, \"!\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: initialValues,\n      validationSchema: validationSchema,\n      onSubmit: handleSubmit,\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"name\",\n            children: \"Store Name:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Field, {\n            type: \"text\",\n            id: \"name\",\n            name: \"name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n            name: \"name\",\n            component: \"div\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"email\",\n            children: \"Store Email:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Field, {\n            type: \"email\",\n            id: \"email\",\n            name: \"email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n            name: \"email\",\n            component: \"div\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"code\",\n            children: \"Store Code:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Field, {\n            type: \"text\",\n            id: \"code\",\n            name: \"code\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n            name: \"code\",\n            component: \"div\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            children: \"Save Changes\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Welcome to the Store Dashboard, \", store.name, \"!\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Store Name: \", store.name]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Store Email: \", store.email]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Store Code: \", store.code]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Services: \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 5\n  }, this);\n}\n_s(StoreAcctPage, \"vpOJk5Ua2tooB67B5OYl9fmYwCY=\");\n_c = StoreAcctPage;\n;\nvar _c;\n$RefreshReg$(_c, \"StoreAcctPage\");","map":{"version":3,"names":["React","useState","useEffect","Formik","Field","Form","ErrorMessage","Yup","StoreCard","TransactionsByStore","jsxDEV","_jsxDEV","StoreAcctPage","stores","loggedInStoreId","_s","store","setStore","loading","setLoading","console","log","fetchStoreData","filteredStores","filter","id","parseInt","length","warn","error","children","fileName","_jsxFileName","lineNumber","columnNumber","initialValues","name","email","code","validationSchema","object","shape","string","required","handleSubmit","values","setSubmitting","onSubmit","htmlFor","type","component","_c","$RefreshReg$"],"sources":["/home/lebowski/Development/code/phase-5/project-community-connex/client/src/components/StoreAcctPage.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Formik, Field, Form, ErrorMessage } from 'formik';\nimport * as Yup from 'yup';\n\nimport StoreCard from \"./StoreCard\";\nimport TransactionsByStore from \"./TransactionsByStore\";\n\n\nexport default function StoreAcctPage({ stores, loggedInStoreId }) {\n  // const loggedInStoreId = sessionStorage.getItem('store_id');\n  const [store, setStore] = useState(null);\n  const [loading, setLoading] = useState(true);\n  console.log(loggedInStoreId ? loggedInStoreId : 'none')\n\n  useEffect(() => {\n    const fetchStoreData = async () => {\n      try {\n        if (loggedInStoreId) {\n          // Filter the stores array based on the logged-in store ID\n          const filteredStores = stores.filter((store) => store.id === parseInt(loggedInStoreId));\n\n          // Check if the filteredStores array has any items\n          if (filteredStores.length > 0) {\n            // Assuming there's only one store with the given ID, set it as the store\n            setStore(filteredStores[0]);\n          } else {\n            console.warn('Store not found with the provided ID.');\n          }\n        } else {\n          console.warn('No store ID available.');\n        }\n      } catch (error) {\n        console.error('Error fetching store data:', error);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchStoreData();\n  }, [loggedInStoreId, stores]);\n\n  if (loading) {\n    return <p>Loading...</p>;\n  }\n\n  if (!store) {\n    // Handle the case where store data is not available\n    return <p>Store data not found.</p>;\n  }\n\n  //--------------------------------------------------------------------------------------------\n  const initialValues = {\n    name: store.name,\n    email: store.email,\n    code: store.code,\n  };\n\n  const validationSchema = Yup.object().shape({\n    name: Yup.string().required('Required'),\n    email: Yup.string().email('Invalid email address').required('Required'),\n    code: Yup.string().required('Required'),\n    // Add more validations as needed\n  });\n\n  const handleSubmit = (values, { setSubmitting }) => {\n    // Handle the submission logic here\n    console.log('Form values:', values);\n    setSubmitting(false);\n  };\n\n\n\n\n  return (\n    <div>\n      <h2>Welcome to the Store Dashboard, {store.name}!</h2>\n\n      {/* Formik form for editing store details */}\n      <Formik\n        initialValues={initialValues}\n        validationSchema={validationSchema}\n        onSubmit={handleSubmit}\n      >\n        <Form>\n          <div>\n            <label htmlFor=\"name\">Store Name:</label>\n            <Field type=\"text\" id=\"name\" name=\"name\" />\n            <ErrorMessage name=\"name\" component=\"div\" />\n          </div>\n\n          <div>\n            <label htmlFor=\"email\">Store Email:</label>\n            <Field type=\"email\" id=\"email\" name=\"email\" />\n            <ErrorMessage name=\"email\" component=\"div\" />\n          </div>\n\n          <div>\n            <label htmlFor=\"code\">Store Code:</label>\n            <Field type=\"text\" id=\"code\" name=\"code\" />\n            <ErrorMessage name=\"code\" component=\"div\" />\n          </div>\n\n          {/* Add more form fields as needed */}\n\n          <div>\n            <button type=\"submit\">Save Changes</button>\n          </div>\n        </Form>\n      </Formik>\n\n\n      <h2>Welcome to the Store Dashboard, {store.name}!</h2>\n      <p>Store Name: {store.name}</p>\n      <p>Store Email: {store.email}</p>\n      <p>Store Code: {store.code}</p>\n      <p>Services: {}</p>\n      {/* <TransactionsByStore storename={store.name} storeId={store.id} /> */}\n      {/* Add more components or details as needed */}\n    </div>\n  );\n};\n\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}