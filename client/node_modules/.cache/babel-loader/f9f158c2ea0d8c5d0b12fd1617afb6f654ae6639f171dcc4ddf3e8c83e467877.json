{"ast":null,"code":"// import React, { useState, useEffect } from 'react';\n\n// const TransactionsByStore = () => {\n//   const [shop, setShop] = useState(null);\n//   const [carts, setCarts] = useState(null);\n\n//   useEffect(() => {\n//     const fetchData = async () => {\n//       try {\n//         const response = await fetch(\"/check_store_session\");\n//         if (response.ok) {\n//           const store = await response.json();\n//           setShop(store);\n\n//           // Assuming there is a carts endpoint, fetch cart data here\n//           const cartsResponse = await fetch(\"/carts\");\n//           if (cartsResponse.ok) {\n//             const cartData = await cartsResponse.json();\n//             setCarts(cartData.carts);\n//           }\n//         }\n//       } catch (error) {\n//         console.error('Error fetching store data:', error);\n//       }\n//     };\n\n//     fetchData();\n//   }, []);\n\n//   // Check if shop or carts is null or undefined\n//   if (!shop || !carts) {\n//     return <p>Loading...</p>; // You might want to display a loading indicator\n//   }\n\n//   // Check if transactions is null or undefined\n//   const transactions = shop.transactions || [];\n//   console.log(shop.goods_services);\n\n//   // Map over goods_services and filter the cart by goods_service_id\n//   const goodsServicesWithCart = shop.goods_services.map((goodsService) => {\n//     const cartForGoodsService = carts.find((cart) => cart.goods_service_id === goodsService.id);\n//     return {\n//       ...goodsService,\n//       cart: cartForGoodsService || null,\n//     };\n//   });\n\n//   return (\n//     <div align='center' className='storess'>\n//       <h2>Transactions for {shop ? shop.name : \"\"}</h2>\n//       {transactions.map((transaction) => (\n//         <div key={transaction.id}>\n//           <div><b>Client:</b> {transaction.client.name}</div>\n//           <div><b>Email:</b> {transaction.client.email}</div>\n//           <div><b>Total Amount:</b> ${transaction.total_amount.toFixed(2)}</div>\n//           {/* Add more details as needed */}\n//           <br />\n//           {/* Format date similar to ClientTransactions component */}\n//           <div><b>Date/Time:</b> {new Date(transaction.timestamp).toLocaleString('en-US', {\n//             year: 'numeric',\n//             month: 'numeric',\n//             day: 'numeric',\n//             hour: 'numeric',\n//             minute: 'numeric',\n//             hour12: true,\n//             timeZone: 'America/New_York',\n//           })}</div>\n//           <div>-----------------------------------------------------------------</div>\n//           <div>-------------------------------------------------------------------------</div>\n//           <br />\n//           <br />\n//         </div>\n//       ))}\n\n//       {goodsServicesWithCart.map((goodsService) => (\n//         <div key={goodsService.id}>\n//           <h3>{goodsService.name}</h3>\n//           <p>Price: ${goodsService.price.toFixed(2)}</p>\n//           {goodsService.cart && (\n//             <p>Cart Information: {/* Render cart details from goodsService.cart */}</p>\n//           )}\n//           <hr />\n//         </div>\n//       ))}\n//     </div>\n//   );\n// };\n\n// export default TransactionsByStore;\n\n// const [shop, setShop] = useState(null);\n\n//   useEffect(() => {\n//     fetch(\"/check_store_session\").then((resp) => {\n//       if (resp.ok) {\n//         resp.json().then((store) => setShop(store));\n//       }\n//     });\n//   }, []);\n\n//   // Check if shop is null or undefined\n//   if (!shop) {\n//     return <p>Loading...</p>; // You might want to display a loading indicator\n//   }\n\n//   // Check if transactions is null or undefined\n//   const trans = shop.transactions || [];\n\n//   return (\n//     <div align='center' className='storess'>\n//       <h2>Transactions for {shop ? shop.name : \"\"}</h2>\n//       <ul>\n//         {trans.map((tran) => (\n//           <p key={tran.id}>\n//             <p>Client: {tran.client.name}</p>\n//             <p>Email: {tran.client.email}</p>\n//             <p>Total Amount: {tran.total_amount}</p>\n//             {/* Add more details as needed */}\n//           </p>\n//         ))}\n//       </ul>\n//     </div>\n//   );\n// };\n\n// export default TransactionsByStore;","map":{"version":3,"names":[],"sources":["/home/lebowski/Development/code/phase-5/project-community-connex/client/src/components/TransactionsByStore.js"],"sourcesContent":["// import React, { useState, useEffect } from 'react';\n\n// const TransactionsByStore = () => {\n//   const [shop, setShop] = useState(null);\n//   const [carts, setCarts] = useState(null);\n\n//   useEffect(() => {\n//     const fetchData = async () => {\n//       try {\n//         const response = await fetch(\"/check_store_session\");\n//         if (response.ok) {\n//           const store = await response.json();\n//           setShop(store);\n\n//           // Assuming there is a carts endpoint, fetch cart data here\n//           const cartsResponse = await fetch(\"/carts\");\n//           if (cartsResponse.ok) {\n//             const cartData = await cartsResponse.json();\n//             setCarts(cartData.carts);\n//           }\n//         }\n//       } catch (error) {\n//         console.error('Error fetching store data:', error);\n//       }\n//     };\n\n//     fetchData();\n//   }, []);\n\n//   // Check if shop or carts is null or undefined\n//   if (!shop || !carts) {\n//     return <p>Loading...</p>; // You might want to display a loading indicator\n//   }\n\n//   // Check if transactions is null or undefined\n//   const transactions = shop.transactions || [];\n//   console.log(shop.goods_services);\n\n//   // Map over goods_services and filter the cart by goods_service_id\n//   const goodsServicesWithCart = shop.goods_services.map((goodsService) => {\n//     const cartForGoodsService = carts.find((cart) => cart.goods_service_id === goodsService.id);\n//     return {\n//       ...goodsService,\n//       cart: cartForGoodsService || null,\n//     };\n//   });\n\n//   return (\n//     <div align='center' className='storess'>\n//       <h2>Transactions for {shop ? shop.name : \"\"}</h2>\n//       {transactions.map((transaction) => (\n//         <div key={transaction.id}>\n//           <div><b>Client:</b> {transaction.client.name}</div>\n//           <div><b>Email:</b> {transaction.client.email}</div>\n//           <div><b>Total Amount:</b> ${transaction.total_amount.toFixed(2)}</div>\n//           {/* Add more details as needed */}\n//           <br />\n//           {/* Format date similar to ClientTransactions component */}\n//           <div><b>Date/Time:</b> {new Date(transaction.timestamp).toLocaleString('en-US', {\n//             year: 'numeric',\n//             month: 'numeric',\n//             day: 'numeric',\n//             hour: 'numeric',\n//             minute: 'numeric',\n//             hour12: true,\n//             timeZone: 'America/New_York',\n//           })}</div>\n//           <div>-----------------------------------------------------------------</div>\n//           <div>-------------------------------------------------------------------------</div>\n//           <br />\n//           <br />\n//         </div>\n//       ))}\n\n//       {goodsServicesWithCart.map((goodsService) => (\n//         <div key={goodsService.id}>\n//           <h3>{goodsService.name}</h3>\n//           <p>Price: ${goodsService.price.toFixed(2)}</p>\n//           {goodsService.cart && (\n//             <p>Cart Information: {/* Render cart details from goodsService.cart */}</p>\n//           )}\n//           <hr />\n//         </div>\n//       ))}\n//     </div>\n//   );\n// };\n\n// export default TransactionsByStore;\n\n// const [shop, setShop] = useState(null);\n\n//   useEffect(() => {\n//     fetch(\"/check_store_session\").then((resp) => {\n//       if (resp.ok) {\n//         resp.json().then((store) => setShop(store));\n//       }\n//     });\n//   }, []);\n\n//   // Check if shop is null or undefined\n//   if (!shop) {\n//     return <p>Loading...</p>; // You might want to display a loading indicator\n//   }\n\n//   // Check if transactions is null or undefined\n//   const trans = shop.transactions || [];\n\n//   return (\n//     <div align='center' className='storess'>\n//       <h2>Transactions for {shop ? shop.name : \"\"}</h2>\n//       <ul>\n//         {trans.map((tran) => (\n//           <p key={tran.id}>\n//             <p>Client: {tran.client.name}</p>\n//             <p>Email: {tran.client.email}</p>\n//             <p>Total Amount: {tran.total_amount}</p>\n//             {/* Add more details as needed */}\n//           </p>\n//         ))}\n//       </ul>\n//     </div>\n//   );\n// };\n\n// export default TransactionsByStore;\n"],"mappings":"AAAA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA"},"metadata":{},"sourceType":"module","externalDependencies":[]}