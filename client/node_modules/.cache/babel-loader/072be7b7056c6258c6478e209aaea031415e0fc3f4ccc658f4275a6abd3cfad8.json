{"ast":null,"code":"var _jsxFileName = \"/home/lebowski/Development/code/phase-5/project-community-connex/client/src/components/Clients.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport ClientCard from \"./ClientCard\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Clients({\n  clients\n}) {\n  _s();\n  const [shop, setShop] = useState(null);\n  useEffect(() => {\n    fetch(\"/check_store_session\").then(resp => {\n      if (resp.ok) {\n        return resp.json();\n      }\n      throw new Error(\"Failed to fetch shop data\");\n    }).then(setShop).catch(error => {\n      console.error(error);\n    });\n  }, []);\n  if (!shop) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 16\n    }, this);\n  }\n  const subbedClients = (shop === null || shop === void 0 ? void 0 : shop.subscribed_clients) || [];\n  if (!Array.isArray(subbedClients)) {\n    // Handle the case where subscribed_clients is not an array\n    console.error(\"subscribed_clients is not an array:\", subbedClients);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Error loading subscribed clients\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 16\n    }, this);\n  }\n  const mappedSubbedClients = subbedClients.map(client => client);\n  const clientView = mappedSubbedClients.map(client => /*#__PURE__*/_jsxDEV(ClientCard, {\n    id: client.id,\n    name: client.name,\n    email: client.email\n  }, client.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 9\n  }, this));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    align: \"center\",\n    children: clientView\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 9\n  }, this);\n}\n_s(Clients, \"8f6C0oXVboepx2554EcUa2l48Xk=\");\n_c = Clients;\nvar _c;\n$RefreshReg$(_c, \"Clients\");","map":{"version":3,"names":["React","useState","useEffect","ClientCard","jsxDEV","_jsxDEV","Clients","clients","_s","shop","setShop","fetch","then","resp","ok","json","Error","catch","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","subbedClients","subscribed_clients","Array","isArray","mappedSubbedClients","map","client","clientView","id","name","email","align","_c","$RefreshReg$"],"sources":["/home/lebowski/Development/code/phase-5/project-community-connex/client/src/components/Clients.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport ClientCard from \"./ClientCard\";\n\nexport default function Clients({ clients }) {\n\n    const [shop, setShop] = useState(null)\n\n    useEffect(() => {\n        fetch(\"/check_store_session\")\n          .then((resp) => {\n            if (resp.ok) {\n              return resp.json();\n            }\n            throw new Error(\"Failed to fetch shop data\");\n          })\n          .then(setShop)\n          .catch((error) => {\n            console.error(error);\n          });\n      }, []);\n    \n      if (!shop) {\n        return <div>Loading...</div>;\n      }\n    \n      const subbedClients = shop?.subscribed_clients || [];\n    \n      if (!Array.isArray(subbedClients)) {\n        // Handle the case where subscribed_clients is not an array\n        console.error(\"subscribed_clients is not an array:\", subbedClients);\n        return <div>Error loading subscribed clients</div>;\n      }\n    \n      const mappedSubbedClients = subbedClients.map((client) => client);\n    \n      const clientView = mappedSubbedClients.map((client) => (\n        <ClientCard\n          key={client.id}\n          id={client.id}\n          name={client.name}\n          email={client.email}\n        />\n      ));\n\n\n\n    return (\n        <div align='center'>\n            {clientView}\n        </div>\n    )\n}\n\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,UAAU,MAAM,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtC,eAAe,SAASC,OAAOA,CAAC;EAAEC;AAAQ,CAAC,EAAE;EAAAC,EAAA;EAEzC,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EAEtCC,SAAS,CAAC,MAAM;IACZS,KAAK,CAAC,sBAAsB,CAAC,CAC1BC,IAAI,CAAEC,IAAI,IAAK;MACd,IAAIA,IAAI,CAACC,EAAE,EAAE;QACX,OAAOD,IAAI,CAACE,IAAI,CAAC,CAAC;MACpB;MACA,MAAM,IAAIC,KAAK,CAAC,2BAA2B,CAAC;IAC9C,CAAC,CAAC,CACDJ,IAAI,CAACF,OAAO,CAAC,CACbO,KAAK,CAAEC,KAAK,IAAK;MAChBC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;IACtB,CAAC,CAAC;EACN,CAAC,EAAE,EAAE,CAAC;EAEN,IAAI,CAACT,IAAI,EAAE;IACT,oBAAOJ,OAAA;MAAAe,QAAA,EAAK;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAC9B;EAEA,MAAMC,aAAa,GAAG,CAAAhB,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEiB,kBAAkB,KAAI,EAAE;EAEpD,IAAI,CAACC,KAAK,CAACC,OAAO,CAACH,aAAa,CAAC,EAAE;IACjC;IACAN,OAAO,CAACD,KAAK,CAAC,qCAAqC,EAAEO,aAAa,CAAC;IACnE,oBAAOpB,OAAA;MAAAe,QAAA,EAAK;IAAgC;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EACpD;EAEA,MAAMK,mBAAmB,GAAGJ,aAAa,CAACK,GAAG,CAAEC,MAAM,IAAKA,MAAM,CAAC;EAEjE,MAAMC,UAAU,GAAGH,mBAAmB,CAACC,GAAG,CAAEC,MAAM,iBAChD1B,OAAA,CAACF,UAAU;IAET8B,EAAE,EAAEF,MAAM,CAACE,EAAG;IACdC,IAAI,EAAEH,MAAM,CAACG,IAAK;IAClBC,KAAK,EAAEJ,MAAM,CAACI;EAAM,GAHfJ,MAAM,CAACE,EAAE;IAAAZ,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAIf,CACF,CAAC;EAIJ,oBACInB,OAAA;IAAK+B,KAAK,EAAC,QAAQ;IAAAhB,QAAA,EACdY;EAAU;IAAAX,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACV,CAAC;AAEd;AAAChB,EAAA,CAhDuBF,OAAO;AAAA+B,EAAA,GAAP/B,OAAO;AAAA,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}