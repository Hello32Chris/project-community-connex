{"ast":null,"code":"var _jsxFileName = \"/home/lebowski/Development/code/phase-5/project-community-connex/client/src/components/ClientLoginForm.js\";\n// LoginForm.js\nimport React from 'react';\nimport { Formik, Field, Form, ErrorMessage } from 'formik';\nimport * as Yup from 'yup';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ClientLoginForm = ({\n  getClients\n}) => {\n  const initialValues = {\n    email: '',\n    password: ''\n  };\n  const validationSchema = Yup.object().shape({\n    email: Yup.string().email('Invalid email address').required('Required'),\n    password: Yup.string().required('Required')\n  });\n  const handleSubmit = async (values, {\n    setSubmitting\n  }) => {\n    try {\n      // Send login request to your backend\n      const response = await fetch('/client_login', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(values)\n      });\n      if (response.ok) {\n        const client = await response.json();\n        getClients(client);\n        history.push('/home');\n      } else {\n        const error = await response.json();\n        console.error('Login failed:', error);\n      }\n    } catch (error) {\n      console.error('Error during login:', error);\n    }\n    setSubmitting(false);\n  };\n  return /*#__PURE__*/_jsxDEV(Formik, {\n    initialValues: initialValues,\n    validationSchema: validationSchema,\n    onSubmit: handleSubmit,\n    children: /*#__PURE__*/_jsxDEV(Form, {\n      children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          children: \"Email:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Field, {\n          type: \"email\",\n          id: \"email\",\n          name: \"email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n          name: \"email\",\n          component: \"div\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          children: \"Password:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Field, {\n          type: \"password\",\n          id: \"password\",\n          name: \"password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n          name: \"password\",\n          component: \"div\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n};\n_c = ClientLoginForm;\nexport default ClientLoginForm;\n\n// import React, { useEffect, useState } from \"react\";\n// import { useHistory } from \"react-router-dom\";\n\n// function LoginForm({setLoggedInID, setLoggedIn, loggedIn}) {\n\n//     const [email, setEmail] = useState('')\n//     const [password, setPassword] = useState('')\n//     const [validLogin, setValidLogin] = useState(false)\n//     const history = useHistory()\n\n//     const handleLogin = async () => {\n//         try{\n//             const response = await fetch('/clients') // Fetch customer data\n//             const clientData = await response.json()\n//             const client = clientData.find((client) => client.email === email);\n\n//             if (client && client.password === password) {\n//                 // Valid login\n//                 console.log('Login successful')\n//                 console.log(client.id)\n//                 setLoggedIn(!loggedIn)\n//                 setLoggedInID(client.id)\n//                 history.push('/Home')\n//             } else {\n//                 // Invalid login\n//                 setValidLogin('Invalid username or password');\n//             }\n\n//         } catch (error) {\n//             console.error('Error fetching customer data', error);\n//         };\n//     };\n\n//     return (\n//         <div className=\"loginform\">\n//             <div className=\"centered-content\">\n//                 <h1 className=\"login\">Login</h1>\n//                 <br />\n//                 <div id=\"logform\">\n//                     Email: <input\n//                         className=\"loginput\"\n//                         type=\"text\"\n//                         placeholder=\"Email\"\n//                         value={email}\n//                         onChange={(e) => setEmail(e.target.value)}\n//                     />\n//                     <br/>\n//                     Password: <input\n//                         className=\"loginput\"\n//                         type=\"password\"\n//                         placeholder=\"Password\"\n//                         value={password}\n//                         onChange={(e) => setPassword(e.target.value)}\n//                     />\n//                     <br />\n//                     <button className=\"loginbutton\" onClick={handleLogin}>Login</button>\n//                     {validLogin && <p>{validLogin}</p>}\n//                 </div>\n//             </div>\n//         </div>\n//     )\n// }\n\n// export default LoginForm\nvar _c;\n$RefreshReg$(_c, \"ClientLoginForm\");","map":{"version":3,"names":["React","Formik","Field","Form","ErrorMessage","Yup","jsxDEV","_jsxDEV","ClientLoginForm","getClients","initialValues","email","password","validationSchema","object","shape","string","required","handleSubmit","values","setSubmitting","response","fetch","method","headers","body","JSON","stringify","ok","client","json","history","push","error","console","onSubmit","children","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","type","id","name","component","_c","$RefreshReg$"],"sources":["/home/lebowski/Development/code/phase-5/project-community-connex/client/src/components/ClientLoginForm.js"],"sourcesContent":["// LoginForm.js\nimport React from 'react';\nimport { Formik, Field, Form, ErrorMessage } from 'formik';\nimport * as Yup from 'yup';\n\nconst ClientLoginForm = ({ getClients }) => {\n\n\n\n  \n  const initialValues = {\n    email: '',\n    password: '',\n  };\n\n  const validationSchema = Yup.object().shape({\n    email: Yup.string().email('Invalid email address').required('Required'),\n    password: Yup.string().required('Required'),\n  });\n\n  const handleSubmit = async (values, { setSubmitting }) => {\n    try {\n      // Send login request to your backend\n      const response = await fetch('/client_login', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(values),\n      });\n\n      if (response.ok) {\n        const client = await response.json();\n        getClients(client);\n        history.push('/home')\n      } else {\n        const error = await response.json();\n        console.error('Login failed:', error);\n      }\n    } catch (error) {\n      console.error('Error during login:', error);\n    }\n\n    setSubmitting(false);\n  };\n\n  return (\n    <Formik\n      initialValues={initialValues}\n      validationSchema={validationSchema}\n      onSubmit={handleSubmit}\n    >\n      <Form>\n      <br/>\n        <div>\n          <label htmlFor=\"email\">Email:</label>\n          <Field type=\"email\" id=\"email\" name=\"email\" />\n          <ErrorMessage name=\"email\" component=\"div\" />\n        </div>\n        <br/>\n        <div>\n          <label htmlFor=\"password\">Password:</label>\n          <Field type=\"password\" id=\"password\" name=\"password\" />\n          <ErrorMessage name=\"password\" component=\"div\" />\n        </div>\n        <br/>\n        <div>\n       \n          <button type=\"submit\">Login</button>\n        </div>\n      </Form>\n    </Formik>\n  );\n};\n\nexport default ClientLoginForm;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// import React, { useEffect, useState } from \"react\";\n// import { useHistory } from \"react-router-dom\";\n\n\n// function LoginForm({setLoggedInID, setLoggedIn, loggedIn}) {\n\n//     const [email, setEmail] = useState('')\n//     const [password, setPassword] = useState('')\n//     const [validLogin, setValidLogin] = useState(false)\n//     const history = useHistory()\n\n    \n//     const handleLogin = async () => {\n//         try{\n//             const response = await fetch('/clients') // Fetch customer data\n//             const clientData = await response.json()\n//             const client = clientData.find((client) => client.email === email);\n            \n            \n//             if (client && client.password === password) {\n//                 // Valid login\n//                 console.log('Login successful')\n//                 console.log(client.id)\n//                 setLoggedIn(!loggedIn)\n//                 setLoggedInID(client.id)\n//                 history.push('/Home')\n//             } else {\n//                 // Invalid login\n//                 setValidLogin('Invalid username or password');\n//             }\n            \n//         } catch (error) {\n//             console.error('Error fetching customer data', error);\n//         };\n//     };\n\n\n//     return (\n//         <div className=\"loginform\">\n//             <div className=\"centered-content\">\n//                 <h1 className=\"login\">Login</h1>\n//                 <br />\n//                 <div id=\"logform\">\n//                     Email: <input\n//                         className=\"loginput\"\n//                         type=\"text\"\n//                         placeholder=\"Email\"\n//                         value={email}\n//                         onChange={(e) => setEmail(e.target.value)}\n//                     />\n//                     <br/>\n//                     Password: <input\n//                         className=\"loginput\"\n//                         type=\"password\"\n//                         placeholder=\"Password\"\n//                         value={password}\n//                         onChange={(e) => setPassword(e.target.value)}\n//                     />\n//                     <br />\n//                     <button className=\"loginbutton\" onClick={handleLogin}>Login</button>\n//                     {validLogin && <p>{validLogin}</p>}\n//                 </div>\n//             </div>\n//         </div>\n//     )\n// }\n\n\n// export default LoginForm"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}