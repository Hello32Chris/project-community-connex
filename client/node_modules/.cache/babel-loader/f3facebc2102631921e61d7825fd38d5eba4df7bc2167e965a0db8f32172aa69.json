{"ast":null,"code":"\n\n// import React, { useState, useEffect } from \"react\";\n// import { useHistory } from \"react-router-dom\";\n// import { useFormik } from \"formik\";\n// import * as Yup from 'yup';\n\n// export default function ClientAccountPage() {\n\n//   useEffect(() => {\n//     document.body.className = 'clientaccountback';\n//     return () => {\n//       document.body.className = '';\n//     }\n//   }, []);\n\n//   const history = useHistory()\n\n//   const [client, setClient] = useState(null)\n//   const [toggle, setToggle] = useState(false)\n\n//   //------------------------------------------------------------------------------------------------ CHECK CLIENT SESSION -------\n//   useEffect(() => {\n//     fetch(\"/check_client_session\").then((resp) => {\n//       if (resp.ok) {\n//         resp.json().then(setClient);\n//       }\n//     });\n//   }, []);\n\n//   //--------------------------------------------------------------------------------------------------- LOGOUT FOR CLIENT ---------\n//   const handleClientLogout = async () => {\n//     try {\n//       const response = await fetch('/client_logout', {\n//         method: 'DELETE',\n//         credentials: 'include',\n//       });\n//       if (response.status === 204) {\n//         console.log('Logout successful')\n//       } else {\n//         console.error('Logout failed');\n//       }\n//     } catch (error) {\n//       console.error('Error during logout:', error);\n//     }\n//   }\n\n//   //--------------------------------------------------------------------------------------------- DELETE FOR CLIENT ACCOUNT -------\n//   function handleDeleteClient(id) {\n//     const confirmDelete = window.confirm(`Are you sure you want to delete your account ${client.name}?`)\n//     if (confirmDelete) {\n//       fetch(`/clients/${id}`, { method: \"DELETE\" }).then((resp) => {\n//         if (resp.ok) {\n//           setClient((clientArr) =>\n//             clientArr?.filter((client) => client.id !== id)\n//           );\n//           alert(`Client ${client.name} Deleted!`)\n//           history.push('/')\n//           setTimeout(() => {\n//             window.location.reload()\n//           }, 10)\n//         }\n//       });\n//     }\n//   }\n\n//   //------------------------------------------------------------------------------------ PATCH FOR CLIENT -----------------------------\n\n//   //------------------------------------------------------------------------------------ CLIENT PATCH FORM ----------------------------\n//   const clientId = client?.id\n//   console.log(clientId)\n\n//   const formik = useFormik({\n//     initialValues: {\n//       name: client ? client.name : \"\",\n//       email: client ? client.email : \"\",\n//     },\n//     validationSchema: Yup.object({\n//       name: Yup.string().optional(),\n//       email: Yup.string().optional(),\n//     }),\n//     onSubmit: (values) => {\n//       fetch(`/clients/${clientId}`, {\n//         method: \"PATCH\",\n//         headers: {\n//           \"Content-Type\": \"application/json\",\n//         },\n//         body: JSON.stringify(values),\n//       })\n//         .then((response) => {\n//           if (!response.ok) {\n//             console.log(client.id);\n//             throw new Error(\"Failed to update client data\");\n//           }\n//           return response.json();\n//         })\n//         .then((data) => {\n//           console.log(\"Client data updated successfully:\", data);\n//         })\n//         .catch((error) => {\n//           console.error(\"Error updating client data:\", error);\n//         });\n//     },\n//   });\n\n//   // //------------------------------------------------------------------------------------------- CLIENT CHECK LOADING ---------------------\n//   // if (!client) {\n//   //   return <div>Loading...</div>;\n//   // }\n\n//   // //------------------------------------------------------------------------------------------ PATCH FOR CLIENT --------------------------\n\n//   const formikForm = (\n//     <div>\n//       <h2>Edit Client Profile</h2>\n//       <form onSubmit={formik.handleSubmit}>\n//         <div>\n//           <label htmlFor=\"name\"><b>Name:</b></label>\n//           <input\n//             type=\"text\"\n//             id=\"name\"\n//             name=\"name\"\n//             onChange={formik.handleChange}\n//             onBlur={formik.handleBlur}\n//             value={formik.values.name}\n//           />\n//         </div>\n//         <br />\n//         <div>\n//           <label htmlFor=\"email\"><b>Email:</b></label>\n//           <input\n//             type=\"text\"\n//             id=\"email\"\n//             name=\"email\"\n//             onChange={formik.handleChange}\n//             onBlur={formik.handleBlur}\n//             value={formik.values.email}\n//           />\n//         </div>\n//         <br />\n//         <button id=\"profilebtn\" type=\"submit\">Update Profile</button>\n//       </form>\n//     </div>\n//   );\n\n//   return (\n//     <div align='center' id=\"regform\">\n//       <h1>Account page for {client?.name}</h1>\n//       <br />\n//       <button className=\"regswitchformbtn\" onClick={() => setToggle(!toggle)} >Edit Account</button>\n//       <br />\n//       {toggle && formikForm}\n//       <br />\n//       <button className=\"deletebtn\" onClick={() => { handleDeleteClient(client?.id); handleClientLogout(); }} >Delete Account</button>\n//     </div>\n//   )\n// }","map":{"version":3,"names":[],"sources":["/home/lebowski/Development/code/phase-5/project-community-connex/client/src/components/ClientAcctPage.js"],"sourcesContent":["\n\n// import React, { useState, useEffect } from \"react\";\n// import { useHistory } from \"react-router-dom\";\n// import { useFormik } from \"formik\";\n// import * as Yup from 'yup';\n\n\n\n// export default function ClientAccountPage() {\n\n//   useEffect(() => {\n//     document.body.className = 'clientaccountback';\n//     return () => {\n//       document.body.className = '';\n//     }\n//   }, []);\n\n//   const history = useHistory()\n\n//   const [client, setClient] = useState(null)\n//   const [toggle, setToggle] = useState(false)\n\n//   //------------------------------------------------------------------------------------------------ CHECK CLIENT SESSION -------\n//   useEffect(() => {\n//     fetch(\"/check_client_session\").then((resp) => {\n//       if (resp.ok) {\n//         resp.json().then(setClient);\n//       }\n//     });\n//   }, []);\n\n//   //--------------------------------------------------------------------------------------------------- LOGOUT FOR CLIENT ---------\n//   const handleClientLogout = async () => {\n//     try {\n//       const response = await fetch('/client_logout', {\n//         method: 'DELETE',\n//         credentials: 'include',\n//       });\n//       if (response.status === 204) {\n//         console.log('Logout successful')\n//       } else {\n//         console.error('Logout failed');\n//       }\n//     } catch (error) {\n//       console.error('Error during logout:', error);\n//     }\n//   }\n\n\n//   //--------------------------------------------------------------------------------------------- DELETE FOR CLIENT ACCOUNT -------\n//   function handleDeleteClient(id) {\n//     const confirmDelete = window.confirm(`Are you sure you want to delete your account ${client.name}?`)\n//     if (confirmDelete) {\n//       fetch(`/clients/${id}`, { method: \"DELETE\" }).then((resp) => {\n//         if (resp.ok) {\n//           setClient((clientArr) =>\n//             clientArr?.filter((client) => client.id !== id)\n//           );\n//           alert(`Client ${client.name} Deleted!`)\n//           history.push('/')\n//           setTimeout(() => {\n//             window.location.reload()\n//           }, 10)\n//         }\n//       });\n//     }\n//   }\n\n//   //------------------------------------------------------------------------------------ PATCH FOR CLIENT -----------------------------\n\n//   //------------------------------------------------------------------------------------ CLIENT PATCH FORM ----------------------------\n//   const clientId = client?.id\n//   console.log(clientId)\n\n//   const formik = useFormik({\n//     initialValues: {\n//       name: client ? client.name : \"\",\n//       email: client ? client.email : \"\",\n//     },\n//     validationSchema: Yup.object({\n//       name: Yup.string().optional(),\n//       email: Yup.string().optional(),\n//     }),\n//     onSubmit: (values) => {\n//       fetch(`/clients/${clientId}`, {\n//         method: \"PATCH\",\n//         headers: {\n//           \"Content-Type\": \"application/json\",\n//         },\n//         body: JSON.stringify(values),\n//       })\n//         .then((response) => {\n//           if (!response.ok) {\n//             console.log(client.id);\n//             throw new Error(\"Failed to update client data\");\n//           }\n//           return response.json();\n//         })\n//         .then((data) => {\n//           console.log(\"Client data updated successfully:\", data);\n//         })\n//         .catch((error) => {\n//           console.error(\"Error updating client data:\", error);\n//         });\n//     },\n//   });\n\n//   // //------------------------------------------------------------------------------------------- CLIENT CHECK LOADING ---------------------\n//   // if (!client) {\n//   //   return <div>Loading...</div>;\n//   // }\n\n//   // //------------------------------------------------------------------------------------------ PATCH FOR CLIENT --------------------------\n\n//   const formikForm = (\n//     <div>\n//       <h2>Edit Client Profile</h2>\n//       <form onSubmit={formik.handleSubmit}>\n//         <div>\n//           <label htmlFor=\"name\"><b>Name:</b></label>\n//           <input\n//             type=\"text\"\n//             id=\"name\"\n//             name=\"name\"\n//             onChange={formik.handleChange}\n//             onBlur={formik.handleBlur}\n//             value={formik.values.name}\n//           />\n//         </div>\n//         <br />\n//         <div>\n//           <label htmlFor=\"email\"><b>Email:</b></label>\n//           <input\n//             type=\"text\"\n//             id=\"email\"\n//             name=\"email\"\n//             onChange={formik.handleChange}\n//             onBlur={formik.handleBlur}\n//             value={formik.values.email}\n//           />\n//         </div>\n//         <br />\n//         <button id=\"profilebtn\" type=\"submit\">Update Profile</button>\n//       </form>\n//     </div>\n//   );\n\n\n//   return (\n//     <div align='center' id=\"regform\">\n//       <h1>Account page for {client?.name}</h1>\n//       <br />\n//       <button className=\"regswitchformbtn\" onClick={() => setToggle(!toggle)} >Edit Account</button>\n//       <br />\n//       {toggle && formikForm}\n//       <br />\n//       <button className=\"deletebtn\" onClick={() => { handleDeleteClient(client?.id); handleClientLogout(); }} >Delete Account</button>\n//     </div>\n//   )\n// }\n\n"],"mappings":";;AAEA;AACA;AACA;AACA;;AAIA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}