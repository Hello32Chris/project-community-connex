{"ast":null,"code":"var _jsxFileName = \"/home/lebowski/Development/code/phase-5/project-community-connex/client/src/components/TransactionsByStore.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TransactionsByStore = ({\n  stores,\n  loggedInStoreId\n}) => {\n  _s();\n  const [transactions, setTransactions] = useState([]);\n  const [store, setStore] = useState(null);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const matchedStore = stores.find(store => store.id === loggedInStoreId);\n        if (!matchedStore) {\n          // Handle the case where the store is not found\n          console.error('Store not found for the logged-in ID:', loggedInStoreId);\n          return;\n        }\n        const response = await fetch(`/transactions/${loggedInStoreId}`);\n        const data = await response.json();\n\n        // Return data and set them to states\n        setStore(matchedStore);\n        setTransactions(data.transactions);\n      } catch (error) {\n        console.error('Error fetching data:', error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchData();\n  }, [stores, loggedInStoreId]);\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 12\n    }, this);\n  }\n  console.log(matchedStore);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Transactions for \", store.name]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: transactions.map(transaction => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Total Amount: \", transaction.total_amount]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }, this)\n      }, transaction.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n_s(TransactionsByStore, \"w9HMQ6m0iXfWo/zxo0w98NRnmjw=\");\n_c = TransactionsByStore;\nexport default TransactionsByStore;\nvar _c;\n$RefreshReg$(_c, \"TransactionsByStore\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","TransactionsByStore","stores","loggedInStoreId","_s","transactions","setTransactions","store","setStore","loading","setLoading","fetchData","matchedStore","find","id","console","error","response","fetch","data","json","children","fileName","_jsxFileName","lineNumber","columnNumber","log","name","map","transaction","total_amount","_c","$RefreshReg$"],"sources":["/home/lebowski/Development/code/phase-5/project-community-connex/client/src/components/TransactionsByStore.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nconst TransactionsByStore = ({ stores, loggedInStoreId }) => {\n\n\n  const [transactions, setTransactions] = useState([]);\n  const [store, setStore] = useState(null);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const matchedStore = stores.find(store => store.id === loggedInStoreId);\n        \n\n        if (!matchedStore) {\n          // Handle the case where the store is not found\n          console.error('Store not found for the logged-in ID:', loggedInStoreId);\n          return;\n        }\n\n        const response = await fetch(`/transactions/${loggedInStoreId}`);\n        const data = await response.json();\n\n        // Return data and set them to states\n        setStore(matchedStore);\n        setTransactions(data.transactions);\n      } catch (error) {\n        console.error('Error fetching data:', error);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchData();\n  }, [stores,loggedInStoreId]);\n\n  if (loading) {\n    return <p>Loading...</p>;\n  }\n  console.log(matchedStore)\n  return (\n    <div>\n      <h2>Transactions for {store.name}</h2>\n      <ul>\n        {transactions.map((transaction) => (\n          <li key={transaction.id}>\n            {/* Render transaction details here */}\n            <p>Total Amount: {transaction.total_amount}</p>\n            {/* Add more details as needed */}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default TransactionsByStore;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,mBAAmB,GAAGA,CAAC;EAAEC,MAAM;EAAEC;AAAgB,CAAC,KAAK;EAAAC,EAAA;EAG3D,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAACU,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAM,CAACY,OAAO,EAAEC,UAAU,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC;EAE5CC,SAAS,CAAC,MAAM;IACd,MAAMa,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B,IAAI;QACF,MAAMC,YAAY,GAAGV,MAAM,CAACW,IAAI,CAACN,KAAK,IAAIA,KAAK,CAACO,EAAE,KAAKX,eAAe,CAAC;QAGvE,IAAI,CAACS,YAAY,EAAE;UACjB;UACAG,OAAO,CAACC,KAAK,CAAC,uCAAuC,EAAEb,eAAe,CAAC;UACvE;QACF;QAEA,MAAMc,QAAQ,GAAG,MAAMC,KAAK,CAAE,iBAAgBf,eAAgB,EAAC,CAAC;QAChE,MAAMgB,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;;QAElC;QACAZ,QAAQ,CAACI,YAAY,CAAC;QACtBN,eAAe,CAACa,IAAI,CAACd,YAAY,CAAC;MACpC,CAAC,CAAC,OAAOW,KAAK,EAAE;QACdD,OAAO,CAACC,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;MAC9C,CAAC,SAAS;QACRN,UAAU,CAAC,KAAK,CAAC;MACnB;IACF,CAAC;IAEDC,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,CAACT,MAAM,EAACC,eAAe,CAAC,CAAC;EAE5B,IAAIM,OAAO,EAAE;IACX,oBAAOT,OAAA;MAAAqB,QAAA,EAAG;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC;EAC1B;EACAV,OAAO,CAACW,GAAG,CAACd,YAAY,CAAC;EACzB,oBACEZ,OAAA;IAAAqB,QAAA,gBACErB,OAAA;MAAAqB,QAAA,GAAI,mBAAiB,EAACd,KAAK,CAACoB,IAAI;IAAA;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACtCzB,OAAA;MAAAqB,QAAA,EACGhB,YAAY,CAACuB,GAAG,CAAEC,WAAW,iBAC5B7B,OAAA;QAAAqB,QAAA,eAEErB,OAAA;UAAAqB,QAAA,GAAG,gBAAc,EAACQ,WAAW,CAACC,YAAY;QAAA;UAAAR,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI;MAAC,GAFxCI,WAAW,CAACf,EAAE;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAInB,CACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEV,CAAC;AAACrB,EAAA,CArDIH,mBAAmB;AAAA8B,EAAA,GAAnB9B,mBAAmB;AAuDzB,eAAeA,mBAAmB;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}